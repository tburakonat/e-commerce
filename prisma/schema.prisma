// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  first_name  String
  last_name   String
  email       String
  password    String
  role        String
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  addresses     User_Address[]
  orders        Order[]
  shopping_cart Shopping_Cart?
}

model User_Address {
  id              Int       @id @default(autoincrement())
  user_id         Int       
  address         String
  city            String
  state           String
  zip_code        String
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt

  user            User @relation(fields: [user_id], references: [id])
}

model Product {
  id            Int       @id @default(autoincrement())
  name          String
  description   String
  price         Decimal   @db.Decimal(10, 2)
  category_id   Int
  stock         Int
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt

  category          Category @relation(fields: [category_id], references: [id])
  images            Product_Image[]
  order_items       Order_Item[]
  shopping_cart_items Shopping_Cart_Item[]
}

model Product_Image {
  id          Int       @id @default(autoincrement())
  product_id  Int
  image_url   String
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  product     Product   @relation(fields: [product_id], references: [id])
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  description String?   
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  products    Product[]
}

model Order {
  id          Int           @id @default(autoincrement())
  user_id     Int
  total       Decimal       @db.Decimal(10, 2)
  status      String
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt

  user        User          @relation(fields: [user_id], references: [id])
  order_items Order_Item[]
}

model Order_Item {
  id          Int       @id @default(autoincrement())
  order_id    Int
  product_id  Int
  quantity    Int
  price       Decimal   @db.Decimal(10, 2)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  order       Order @relation(fields: [order_id], references: [id])
  product     Product @relation(fields: [product_id], references: [id])
}

model Shopping_Cart {
  id                  Int       @id @default(autoincrement())
  user_id             Int       @unique
  total               Decimal   @db.Decimal(10, 2) 
  status              String
  created_at          DateTime  @default(now())
  updated_at          DateTime  @updatedAt

  user                User      @relation(fields: [user_id], references: [id])
  shopping_cart_items Shopping_Cart_Item[]
}

model Shopping_Cart_Item {
  id                  Int       @id @default(autoincrement())
  shopping_cart_id    Int
  product_id          Int
  quantity            Int
  price               Decimal   @db.Decimal(10, 2)
  created_at          DateTime  @default(now())
  updated_at          DateTime  @updatedAt

  order   Shopping_Cart @relation(fields: [shopping_cart_id], references: [id])
  product Product @relation(fields: [product_id], references: [id])
}